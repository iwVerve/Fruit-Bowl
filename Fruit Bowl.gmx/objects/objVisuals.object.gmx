<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>20000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>objects[0] = objBlock;
objects[1] = objPlayerKiller;
objects[2] = objPlayer;
objects[3] = objBounceRefresher;
objects[4] = objBullet;
objects[5] = objCeilingRefresher;
objects[6] = objPlatformOrb;
objects[7] = objSave;

x_dist = 3;
y_dist = 3;
alpha = 0.15;

shadow_surf = noone;

// Not vars so they can easily be accessed from a script
object = array_create(0);
sprite = array_create(0);
left_sprite = array_create(0);
right_sprite = array_create(0);

with(objBlock) {
    sprite_index = sprBlockMaskOpaque;
}

with(objMiniBlock) {
    sprite_index = sprMiniBlockMaskOpaque;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Cleanup

surface_free(shadow_surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(room) {
    case rTutorial:
        Visuals_add_object_sprite(
            objSpikeUp,    sprTutorialSpikeUp,
            objSpikeRight, sprTutorialSpikeRight,
            objSpikeDown,  sprTutorialSpikeDown,
            objSpikeLeft,  sprTutorialSpikeLeft,
            objMiniUp,     sprTutorialMiniUp,
            objMiniRight,  sprTutorialMiniRight,
            objMiniDown,   sprTutorialMiniDown,
            objMiniLeft,   sprTutorialMiniLeft,
        );
        break;
    case rBanana:
        Visuals_add_object_sprite(
            objSpikeUp,    sprBananaSpikeUp,
            objSpikeRight, sprBananaSpikeRight,
            objSpikeDown,  sprBananaSpikeDown,
            objSpikeLeft,  sprBananaSpikeLeft,
            objMiniUp,     sprBananaMiniUp,
            objMiniRight,  sprBananaMiniRight,
            objMiniDown,   sprBananaMiniDown,
            objMiniLeft,   sprBananaMiniLeft,
        );
        break;
    case rCherry:
        Visuals_add_object_sprite(
            objSpikeUp,    sprCherrySpikeUp,
            objSpikeRight, sprCherrySpikeRight,
            objSpikeDown,  sprCherrySpikeDown,
            objSpikeLeft,  sprCherrySpikeLeft,
            objMiniUp,     sprCherryMiniUp,
            objMiniRight,  sprCherryMiniRight,
            objMiniDown,   sprCherryMiniDown,
            objMiniLeft,   sprCherryMiniLeft,
        );
        break;
    case rGrape:
        Visuals_add_object_sprite(
            objMiniUp,     sprGrapeMiniUp,
            objMiniRight,  sprGrapeMiniRight,
            objMiniDown,   sprGrapeMiniDown,
            objMiniLeft,   sprGrapeMiniLeft,
        );
        break;
    case rIntermission1:
        Visuals_add_object_sprite(
            objMiniDown,   sprIntermission1MiniDown,
        );
        break;
    case rApple:
        Visuals_add_apple_object_sprite(
            objSpikeUp,    sprGreenAppleSpikeUp,    sprRedAppleSpikeUp,
            objSpikeRight, sprGreenAppleSpikeRight, sprRedAppleSpikeRight,
            objSpikeDown,  sprGreenAppleSpikeDown,  sprRedAppleSpikeDown,
            objSpikeLeft,  sprGreenAppleSpikeLeft,  sprRedAppleSpikeLeft,
            objMiniUp,     sprGreenAppleMiniUp,     sprRedAppleMiniUp,
            objMiniRight,  sprGreenAppleMiniRight,  sprRedAppleMiniRight,
            objMiniDown,   sprGreenAppleMiniDown,   sprRedAppleMiniDown,
            objMiniLeft,   sprGreenAppleMiniLeft,   sprRedAppleMiniLeft,
        );
        break;
    case rKiwi:
        Visuals_add_object_sprite(
            objSpikeUp,    sprKiwiSpikeUp,
            objSpikeRight, sprKiwiSpikeRight,
            objSpikeDown,  sprKiwiSpikeDown,
            objSpikeLeft,  sprKiwiSpikeLeft,
            objMiniUp,     sprKiwiMiniUp,
            objMiniRight,  sprKiwiMiniRight,
            objMiniDown,   sprKiwiMiniDown,
            objMiniLeft,   sprKiwiMiniLeft,
        );
        break;
    case rCoconut:
        Visuals_add_object_sprite(
            objSpikeUp,    sprCoconutSpikeUp,
            objSpikeRight, sprCoconutSpikeRight,
            objSpikeDown,  sprCoconutSpikeDown,
            objSpikeLeft,  sprCoconutSpikeLeft,
            objMiniUp,     sprCoconutMiniUp,
            objMiniRight,  sprCoconutMiniRight,
            objMiniDown,   sprCoconutMiniDown,
            objMiniLeft,   sprCoconutMiniLeft,
        );
        break;
    case rBlackberry:
        Visuals_add_object_sprite(
            objSpikeUp,    sprBlackberrySpikeUp,
            objSpikeRight, sprBlackberrySpikeRight,
            objSpikeDown,  sprBlackberrySpikeDown,
            objSpikeLeft,  sprBlackberrySpikeLeft,
            objMiniUp,     sprBlackberryMiniUp,
            objMiniRight,  sprBlackberryMiniRight,
            objMiniDown,   sprBlackberryMiniDown,
            objMiniLeft,   sprBlackberryMiniLeft,
        );
        break;
}
        
for (var i = 0; i &lt; array_length_1d(object); i += 1) {
    with(object[i]) {
        if room == rApple {
            if x &lt; 400 {
                sprite_index = other.left_sprite[i];
            }
            else {
                sprite_index = other.right_sprite[i];
            }
        }
        else {
            sprite_index = other.sprite[i];
        }
        
        depth = 1100;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !surface_exists(shadow_surf) {
    shadow_surf = surface_create(800, 608);
}

surface_set_target(shadow_surf);
    draw_clear_alpha(c_black, 0);
    
    draw_set_color_write_enable(0, 0, 0, 1);
        for(var i = 0; i &lt; array_length_1d(objects); i += 1) {
            var object = objects[i];
            
            switch(object) {
                case objPlayer:
                    with(object) {
                        event_perform(ev_draw, 0);
                    }
                    break;
                default:
                    with(object) {
                        draw_self();
                    }
                    break;
            }
        }
    draw_set_color_write_enable(1, 1, 1, 1);
surface_reset_target();

draw_surface_ext(shadow_surf, x_dist, y_dist, 1, 1, 0, c_white, alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
