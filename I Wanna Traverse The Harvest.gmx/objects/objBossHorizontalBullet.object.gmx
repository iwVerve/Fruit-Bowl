<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCherry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1190</depth>
  <persistent>0</persistent>
  <parentName>objBossBulletParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

state = 0;
side = 0;

s0_start_x = x;
s0_target_x = 0;
s0_x_lerp = 0.05;
s0_time = 0;
s0_duration = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if state == 0 {
    //x = lerp(x, s0_target_x, s0_x_lerp);
    
    var progress = clamp(s0_time / s0_duration, 0, 1);
    
    //var eased = 1 - power(1 - progress, 2);
    
    /*var corner_position = 0.3;
    var corner_progress = 0.5;
    var steep = progress * corner_progress / corner_position;
    var shallow = corner_progress + (progress - corner_position) * (1 - corner_progress) / (1 - corner_position);
    var ratio = clamp(progress / corner_position, 0, 1);
    var eased = lerp(steep, shallow, ratio);*/
    
    //var eased = sqrt(progress);
    
    //var f = power(progress, 1/2);
    //var g = 1 - power(1 - progress, 2);
    //var eased = lerp(f, g, progress);
    
    var steep = 1 - power(1 - progress, 4);
    var shallow_start = 1 - power(1 - progress, 1.75);
    var shallow_end = 1 - power(1 - progress, 2);
    var shallow = lerp(shallow_start, shallow_end, progress);
    var eased = lerp(steep, shallow, progress);
    
    x = lerp(s0_start_x, s0_target_x, eased);
    
    if s0_time &gt;= s0_duration {
        hspeed = 12 * side;
        state = 1;
    }
    s0_time += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
