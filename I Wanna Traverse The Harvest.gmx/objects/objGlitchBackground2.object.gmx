<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cell_size = 32;
cell_appear_start = 144;
cell_appear_end = 112;
cells_width = ceil(800 / cell_size);
cells_height = ceil(608 / cell_size);

for(var yy = 0; yy &lt; cells_height; yy += 1) {
    for(var xx = 0; xx &lt; cells_width; xx += 1) {
        cell_progress[yy, xx] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPlayer) {
    for(var cell_y = 0; cell_y &lt; cells_height; cell_y += 1) {
        var cy = cell_size * (cell_y + 0.5);
        for(var cell_x = 0; cell_x &lt; cells_width; cell_x += 1) {
            var cx = cell_size * (cell_x + 0.5);
            var distance = point_distance(cx, cy, objPlayer.x, objPlayer.y);
            var progress = (distance - cell_appear_start) / (cell_appear_end - cell_appear_start);
            cell_progress[cell_y, cell_x] = clamp(progress, 0, 1);
        }
    }
}
else {
   for(var cell_y = 0; cell_y &lt; cells_height; cell_y += 1) {
        for(var cell_x = 0; cell_x &lt; cells_width; cell_x += 1) {
            cell_progress[cell_y, cell_x] = clamp(cell_progress[cell_y, cell_x] - 1/50, 0, 1);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(objPlayer) {
    for(var cell_y = 0; cell_y &lt; cells_height; cell_y += 1) {
        var cy = cell_size * (cell_y + 0.5);
        for(var cell_x = 0; cell_x &lt; cells_width; cell_x += 1) {
            var cx = cell_size * (cell_x + 0.5);
            var size = round(cell_size * cell_progress[cell_y, cell_x] / 2);
            if size &gt; 0 {
                draw_set_color(c_gray);
                draw_rectangle(cx - size, cy - size, cx + size - 1, cy + size - 1, false);
                draw_set_alpha(0.5);
                    draw_set_color(c_dkgray);
                    draw_rectangle(cx - size, cy - size, cx + size - 1, cy + size - 1, true);
                draw_set_alpha(1);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
