<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>images = array_from_values(
    array_from_values(-1, -1,  0, -1, -1, -1),
    array_from_values(-1, 18,  1, -1, -1, -1),
    array_from_values(-1, -1,  2,  3, 17, -1),
    array_from_values( 8,  6,  5,  4, 16, -1),
    array_from_values( 9,  7, -1, 19, 15, -1),
    array_from_values(10, 11, 12, 13, 14, 13),
);
rooms = array_from_values(
    array_from_values(-1,             -1,          rFall,          -1,            -1,     -1),
    array_from_values(-1,             rSecret1,    rTutorial,      -1,            -1,     -1),
    array_from_values(-1,             -1,          rBanana,        rCherry,       rTower, -1),
    array_from_values(rCoconut,       rApple,      rIntermission1, rGrape,        rTower, -1),
    array_from_values(rIntermission2, rKiwi,       -1,             rOutsideAbove, rTower, -1),
    array_from_values(rBlackberry,    rStrawberry, rWatermelon,    rOutside,      rTower, rOutsideRight),
);
start = array_from_values(
    array_from_values(-1, -1, -1, -1, -1, -1),
    array_from_values(-1, -1, -1, -1, -1, -1),
    array_from_values(-1, -1, -1, -1, 3,  -1),
    array_from_values(-1, -1, -1, -1, 2,  -1),
    array_from_values(-1, -1, -1, -1, 1,  -1),
    array_from_values(-1, -1, -1, -1, -1, -1),
);

scale = 0.3;

hover_x = -1;
hover_y = -1;
hover_room = -1;
no_room_index = sprite_get_number(sprRoomThumbnail) - 1;

total_width = array_length_2d(images, 0) * sprite_get_width(sprRoomThumbnail) * scale;
total_height = array_height_2d(images) * sprite_get_height(sprRoomThumbnail) * scale;
border_width = 651;
border_height = 424;

if !savedata_get("seenTowerRight") {
    images[5, 5] = -1;
    rooms[5, 5] = -1;
}
if !savedata_get("seenSecret1") {
    images[1, 1] = -1;
    rooms[1, 1] = -1;
}
if !savedata_get("seenSecret2A") {
    images[4, 3] = -1;
    rooms[4, 3] = -1;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var spr = sprRoomThumbnail;
var width = scale * sprite_get_width(spr);
var height = scale * sprite_get_height(spr);    

hover_x = floor((mouse_x - x) / width);
hover_y = floor((mouse_y - y) / height);
    
if hover_x &gt;= 0 &amp;&amp; hover_x &lt; array_length_2d(rooms, 0) &amp;&amp; hover_y &gt;= 0 &amp;&amp; hover_y &lt; array_height_2d(rooms) {
    hover_room = rooms[hover_y, hover_x];
}
else {
    hover_room = -1;
}

if instance_exists(objPlayer) &amp;&amp; mouse_check_button_pressed(mb_left) {
    if hover_room != -1 {
        var target = start[hover_y, hover_x];
        if target != -1 {
            global.playerStartTarget = target;
        }
        instance_destroy(objPlayer);
        room_goto(hover_room);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var spr = sprRoomThumbnail;
var width = scale * sprite_get_width(spr);
var height = scale * sprite_get_height(spr);

texture_set_interpolation(true);
    for(var i = 0; i &lt; array_height_2d(images); i += 1) {
        for(var j = 0; j &lt; array_length_2d(images, i); j += 1) {
            var index = images[i, j];
            if index == -1 {
                index = no_room_index;
            }
            draw_sprite_ext(spr, index, x + j * width, y + i * height, scale, scale, 0, c_white, 1);
        }
    }
texture_set_interpolation(false);

if hover_room != -1 &amp;&amp; instance_exists(objPlayer) {
    var xx = x + width * hover_x;
    var yy = y + height * hover_y;
    draw_set_color(c_white);
    draw_set_alpha(0.25);
        draw_rectangle(xx, yy, xx + width - 1, yy + height - 1, false);
    draw_set_alpha(1);
}

draw_sprite_ext(sprMapBorder, 0, x, y, total_width / border_width, total_height / border_height, 0, c_white, 1);
draw_sprite_ext(sprMapCursor, 0, x + 12, y + 8, 1, 1, 0, c_white, 0.6);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
