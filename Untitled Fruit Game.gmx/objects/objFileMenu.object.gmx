<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initiailze menu variables

fileSelected = false; //False if selecting a file, true if selecting difficulty
savefileSelect = global.menuSelectPrev[0]; 
difficultySelect = 0; //-1 is Load Game, 0+ are difficulties
//warningShow = false; //Confirmation text for overwriting a savefile
showOverwriteWarning = false;
warningSelectYes = true;
 
str[0] = "Save 1";
str[1] = "Save 2";
str[2] = "Save 3";

xSeparation = 240;
animationIndex = 0;

//Load save file values
for (var i = 0; i &lt; 3; i += 1) {
    if savedata_exists(i + 1) {
        global.savenum = i + 1;
        savedata_read();
        
        exists[i] = true;
        death[i] = savedata_get("death");
        time[i] = savedata_get("time");
        difficulty[i] = savedata_get("difficulty");
        for (var j = 0; j &lt; 8; j += 1) {
            boss[j, i] = savedata_get("bossItem" + string(j));
        }
        clear[i] = savedata_get("gameClear");
    }
    else {
        exists[i] = false;
        death[i] = 0;
        time[i] = 0;
    }
    
    var t = time[i];
    
    timeStr[i] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[i] += string(t div 600);
    t = t mod 600;
    timeStr[i] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[i] += string(t div 10);
    t = t mod 10;
    timeStr[i] += string(floor(t));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Navigate menu

animationIndex++;

if input_check_pressed(KEY.MENU_OPTIONS) {
    menu_goto_options();
}

//Select which savefile or return to title
if !fileSelected {
    var hInput = input_check_pressed(KEY.MENU_RIGHT) - input_check_pressed(KEY.MENU_LEFT);
    if hInput != 0 {
        menu_change_savefile(savefileSelect + hInput);
    }
    else if input_check_pressed(KEY.MENU_BACK) {
        menu_goto_title();
    }
    else if input_check_pressed(KEY.MENU_ACCEPT) {
        menu_select_savefile();
    }
}
//Select option in savefile
else {
    if !showOverwriteWarning { //Not currently showing yes/no confirmation
        var hInput = input_check_pressed(KEY.MENU_RIGHT) - input_check_pressed(KEY.MENU_LEFT);
        if hInput != 0 {
            var diff = difficultySelect + hInput;
            if global.noEasyModeYet &amp;&amp; diff == 0 {
                diff += hInput;
            }
            menu_change_difficulty(diff);
        }
        else if input_check_pressed(KEY.MENU_BACK) {
            menu_deselect_savefile();
        }
        else if (input_check_pressed(KEY.MENU_ACCEPT)) {
            global.savenum = savefileSelect+1;
            
            if (difficultySelect == -1) { //Load game
                menu_load_savefile();
            }
            else { //Start new game
                if !savedata_exists(global.savenum) {
                    menu_start_new_game(difficultySelect);
                }
                else {
                    menu_show_overwrite_warning();
                }
            }
        }
    }
    else {
        var hInput = input_check_pressed(KEY.MENU_RIGHT) - input_check_pressed(KEY.MENU_LEFT);
        if hInput != 0 {
            audio_play_sound(global.menuSound, 0, false);
            warningSelectYes = !warningSelectYes;
        }
        else if input_check_pressed(KEY.MENU_BACK) {
            menu_hide_overwrite_warning();
        }
        else if input_check_pressed(KEY.MENU_ACCEPT) {
            if warningSelectYes {
                menu_start_new_game(difficultySelect);
            }
            else {
                menu_hide_overwrite_warning();
            }
        }
    }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw all save info text

for(var i = 0; i &lt; 3; i++)
{
    var xx = x + i * xSeparation;
    menu_draw_savefile(i, xx, y);
}

menu_draw_menu_buttons(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
