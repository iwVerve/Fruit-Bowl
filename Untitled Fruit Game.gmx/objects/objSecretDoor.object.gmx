<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSecretDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
arrow_alpha = 0;
arrow_t = 0;

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var can_interact = false;

if can_insert &amp;&amp; place_meeting(x, y, objPlayer) {
    with(objPlayer) {
        if !place_free(x, y + global.grav) {
            can_interact = true;
        }
    }
}
    
if can_interact {
    if input_check_pressed(KEY.UP) {
        if open {
            instance_destroy(objPlayer);
            room_goto(rTemplate);
        }
        else {
            if savedata_get("got_fork") &amp;&amp; !savedata_get("inserted_fork") {
                savedata_set("inserted_fork", true);
            }
            else if savedata_get("got_knife") &amp;&amp; !savedata_get("inserted_knife") {
                savedata_set("inserted_knife", true);
            }
            else if savedata_get("got_spoon") &amp;&amp; !savedata_get("inserted_spoon") {
                savedata_set("inserted_spoon", true);
            }
            event_user(0);
        }
    }
    arrow_alpha += 0.05;
}
else {
    arrow_alpha -= 0.05;
}
arrow_alpha = clamp(arrow_alpha, 0, 1);

arrow_t += 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>open = savedata_get("inserted_fork") &amp;&amp; savedata_get("inserted_knife") &amp;&amp; savedata_get("inserted_spoon");
image_index = ternary(open, 1, 0);

can_insert = open;
can_insert |=  savedata_get("got_fork") &amp;&amp;  !savedata_get("inserted_fork");
can_insert |= savedata_get("got_knife") &amp;&amp; !savedata_get("inserted_knife");
can_insert |= savedata_get("got_spoon") &amp;&amp; !savedata_get("inserted_spoon");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_alpha(arrow_alpha);
    var yy = y + 8 + 3 * dsin(arrow_t * 360 / 120);
    draw_sprite(sprDoorArrow, 0, x + 32, yy);
draw_set_alpha(1);

if !open {
    if savedata_get("inserted_fork") {
        draw_sprite(sprite_index, 2, x, y);
    }
    if savedata_get("inserted_knife") {
        draw_sprite(sprite_index, 3, x, y);
    }
    if savedata_get("inserted_spoon") {
        draw_sprite(sprite_index, 4, x, y);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
